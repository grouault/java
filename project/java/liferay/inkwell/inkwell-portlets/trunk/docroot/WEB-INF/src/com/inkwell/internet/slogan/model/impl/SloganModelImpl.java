/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.inkwell.internet.slogan.model.impl;

import com.inkwell.internet.slogan.model.Slogan;
import com.inkwell.internet.slogan.model.SloganModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Slogan service. Represents a row in the &quot;Slogan_Slogan&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.inkwell.internet.slogan.model.SloganModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SloganImpl}.
 * </p>
 *
 * @author gildas
 * @see SloganImpl
 * @see com.inkwell.internet.slogan.model.Slogan
 * @see com.inkwell.internet.slogan.model.SloganModel
 * @generated
 */
public class SloganModelImpl extends BaseModelImpl<Slogan>
	implements SloganModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a slogan model instance should use the {@link com.inkwell.internet.slogan.model.Slogan} interface instead.
	 */
	public static final String TABLE_NAME = "Slogan_Slogan";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "sloganId", Types.BIGINT },
			{ "sloganDate", Types.TIMESTAMP },
			{ "sloganText", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Slogan_Slogan (uuid_ VARCHAR(75) null,sloganId LONG not null primary key,sloganDate DATE null,sloganText VARCHAR(75) null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,companyId LONG,groupId LONG,userId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Slogan_Slogan";
	public static final String ORDER_BY_JPQL = " ORDER BY slogan.sloganId ASC, slogan.sloganDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Slogan_Slogan.sloganId ASC, Slogan_Slogan.sloganDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.inkwell.internet.slogan.model.Slogan"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.inkwell.internet.slogan.model.Slogan"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.inkwell.internet.slogan.model.Slogan"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long SLOGANTEXT_COLUMN_BITMASK = 4L;
	public static long STATUS_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;
	public static long SLOGANID_COLUMN_BITMASK = 32L;
	public static long SLOGANDATE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.inkwell.internet.slogan.model.Slogan"));

	public SloganModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _sloganId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSloganId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _sloganId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Slogan.class;
	}

	@Override
	public String getModelClassName() {
		return Slogan.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("sloganId", getSloganId());
		attributes.put("sloganDate", getSloganDate());
		attributes.put("sloganText", getSloganText());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long sloganId = (Long)attributes.get("sloganId");

		if (sloganId != null) {
			setSloganId(sloganId);
		}

		Date sloganDate = (Date)attributes.get("sloganDate");

		if (sloganDate != null) {
			setSloganDate(sloganDate);
		}

		String sloganText = (String)attributes.get("sloganText");

		if (sloganText != null) {
			setSloganText(sloganText);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSloganId() {
		return _sloganId;
	}

	@Override
	public void setSloganId(long sloganId) {
		_columnBitmask = -1L;

		_sloganId = sloganId;
	}

	@Override
	public Date getSloganDate() {
		return _sloganDate;
	}

	@Override
	public void setSloganDate(Date sloganDate) {
		_columnBitmask = -1L;

		_sloganDate = sloganDate;
	}

	@Override
	public String getSloganText() {
		if (_sloganText == null) {
			return StringPool.BLANK;
		}
		else {
			return _sloganText;
		}
	}

	@Override
	public void setSloganText(String sloganText) {
		_columnBitmask |= SLOGANTEXT_COLUMN_BITMASK;

		if (_originalSloganText == null) {
			_originalSloganText = _sloganText;
		}

		_sloganText = sloganText;
	}

	public String getOriginalSloganText() {
		return GetterUtil.getString(_originalSloganText);
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
			_statusByUserUuid);
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
		_statusByUserUuid = statusByUserUuid;
	}

	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved}
	 */
	@Override
	public boolean getApproved() {
		return isApproved();
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Slogan.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Slogan toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Slogan)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SloganImpl sloganImpl = new SloganImpl();

		sloganImpl.setUuid(getUuid());
		sloganImpl.setSloganId(getSloganId());
		sloganImpl.setSloganDate(getSloganDate());
		sloganImpl.setSloganText(getSloganText());
		sloganImpl.setStatus(getStatus());
		sloganImpl.setStatusByUserId(getStatusByUserId());
		sloganImpl.setStatusByUserName(getStatusByUserName());
		sloganImpl.setStatusDate(getStatusDate());
		sloganImpl.setCompanyId(getCompanyId());
		sloganImpl.setGroupId(getGroupId());
		sloganImpl.setUserId(getUserId());

		sloganImpl.resetOriginalValues();

		return sloganImpl;
	}

	@Override
	public int compareTo(Slogan slogan) {
		int value = 0;

		if (getSloganId() < slogan.getSloganId()) {
			value = -1;
		}
		else if (getSloganId() > slogan.getSloganId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getSloganDate(), slogan.getSloganDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Slogan)) {
			return false;
		}

		Slogan slogan = (Slogan)obj;

		long primaryKey = slogan.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SloganModelImpl sloganModelImpl = this;

		sloganModelImpl._originalUuid = sloganModelImpl._uuid;

		sloganModelImpl._originalSloganText = sloganModelImpl._sloganText;

		sloganModelImpl._originalStatus = sloganModelImpl._status;

		sloganModelImpl._setOriginalStatus = false;

		sloganModelImpl._originalCompanyId = sloganModelImpl._companyId;

		sloganModelImpl._setOriginalCompanyId = false;

		sloganModelImpl._originalGroupId = sloganModelImpl._groupId;

		sloganModelImpl._setOriginalGroupId = false;

		sloganModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Slogan> toCacheModel() {
		SloganCacheModel sloganCacheModel = new SloganCacheModel();

		sloganCacheModel.uuid = getUuid();

		String uuid = sloganCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			sloganCacheModel.uuid = null;
		}

		sloganCacheModel.sloganId = getSloganId();

		Date sloganDate = getSloganDate();

		if (sloganDate != null) {
			sloganCacheModel.sloganDate = sloganDate.getTime();
		}
		else {
			sloganCacheModel.sloganDate = Long.MIN_VALUE;
		}

		sloganCacheModel.sloganText = getSloganText();

		String sloganText = sloganCacheModel.sloganText;

		if ((sloganText != null) && (sloganText.length() == 0)) {
			sloganCacheModel.sloganText = null;
		}

		sloganCacheModel.status = getStatus();

		sloganCacheModel.statusByUserId = getStatusByUserId();

		sloganCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = sloganCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			sloganCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			sloganCacheModel.statusDate = statusDate.getTime();
		}
		else {
			sloganCacheModel.statusDate = Long.MIN_VALUE;
		}

		sloganCacheModel.companyId = getCompanyId();

		sloganCacheModel.groupId = getGroupId();

		sloganCacheModel.userId = getUserId();

		return sloganCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", sloganId=");
		sb.append(getSloganId());
		sb.append(", sloganDate=");
		sb.append(getSloganDate());
		sb.append(", sloganText=");
		sb.append(getSloganText());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.inkwell.internet.slogan.model.Slogan");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sloganId</column-name><column-value><![CDATA[");
		sb.append(getSloganId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sloganDate</column-name><column-value><![CDATA[");
		sb.append(getSloganDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sloganText</column-name><column-value><![CDATA[");
		sb.append(getSloganText());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Slogan.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Slogan.class };
	private String _uuid;
	private String _originalUuid;
	private long _sloganId;
	private Date _sloganDate;
	private String _sloganText;
	private String _originalSloganText;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserUuid;
	private String _statusByUserName;
	private Date _statusDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _columnBitmask;
	private Slogan _escapedModel;
}